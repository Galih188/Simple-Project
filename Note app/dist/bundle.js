(()=>{var t={56:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},72:t=>{"use strict";var e=[];function n(t){for(var n=-1,a=0;a<e.length;a++)if(e[a].identifier===t){n=a;break}return n}function a(t,a){for(var r={},i=[],s=0;s<t.length;s++){var d=t[s],c=a.base?d[0]+a.base:d[0],l=r[c]||0,u="".concat(c," ").concat(l);r[c]=l+1;var p=n(u),h={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(h);else{var m=o(h,a);a.byIndex=s,e.splice(s,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function o(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var r=a(t=t||[],o=o||{});return function(t){t=t||[];for(var i=0;i<r.length;i++){var s=n(r[i]);e[s].references--}for(var d=a(t,o),c=0;c<r.length;c++){var l=n(r[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}r=d}}},113:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},249:(t,e,n)=>{"use strict";n.d(e,{A:()=>s});var a=n(601),o=n.n(a),r=n(314),i=n.n(r)()(o());i.push([t.id,"body {\n  font-family: Arial, sans-serif;\n  margin: 0;\n  padding: 20px;\n  background: #f4f4f4;\n  transition: all 0.3s ease;\n}\n.app-wrapper {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n.app-container {\n  display: grid;\n  gap: 20px;\n  grid-template-columns: 1fr;\n}\n@media (min-width: 768px) {\n  .app-container {\n    grid-template-columns: 1fr 1fr;\n  }\n}\n@media (min-width: 1024px) {\n  .app-container {\n    grid-template-columns: 1fr 2fr;\n  }\n}\n",""]);const s=i},314:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",a=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),a&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),a&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,a,o,r){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(a)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(i[d]=!0)}for(var c=0;c<t.length;c++){var l=[].concat(t[c]);a&&i[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},430:()=>{class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.shadowRoot.innerHTML="\n        <style>\n          :host { display: block; background: #4CAF50; color: white; padding: 20px; text-align: center; border-radius: 8px; }\n        </style>\n        <h1>Notes App</h1>\n      "}}customElements.define("app-header",t)},540:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},561:()=>{class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.shadowRoot.innerHTML='\n        <style>\n          :host { display: block; text-align: center; padding: 20px; }\n          .spinner { width: 50px; height: 50px; border: 5px solid rgba(0,0,0,0.1); border-top: 5px solid #4CAF50; border-radius: 50%; animation: spin 1s linear infinite; }\n          @keyframes spin { to { transform: rotate(360deg); } }\n        </style>\n        <div class="spinner"></div>\n      '}}customElements.define("loading-indicator",t)},601:t=>{"use strict";t.exports=function(t){return t[1]}},659:t=>{"use strict";var e={};t.exports=function(t,n){var a=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},825:t=>{"use strict";t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,o&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(a,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}}},e={};function n(a){var o=e[a];if(void 0!==o)return o.exports;var r=e[a]={id:a,exports:{}};return t[a](r,r.exports,n),r.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var a in e)n.o(e,a)&&!n.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{"use strict";var t=n(72),e=n.n(t),a=n(825),o=n.n(a),r=n(659),i=n.n(r),s=n(56),d=n.n(s),c=n(540),l=n.n(c),u=n(113),p=n.n(u),h=n(249),m={};m.styleTagTransform=p(),m.setAttributes=d(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),e()(h.A,m),h.A&&h.A.locals&&h.A.locals,n(430);const f="https://notes-api.dicoding.dev/v2",v=async()=>(await fetch(`${f}/notes`)).json(),y=async(t,e)=>(await fetch(`${f}/notes`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:t,body:e})})).json(),g=async t=>(await fetch(`${f}/notes/${t}`,{method:"DELETE"})).json(),b=async t=>(await fetch(`${f}/notes/${t}/archive`,{method:"POST"})).json(),x=async t=>(await fetch(`${f}/notes/${t}/unarchive`,{method:"POST"})).json();class w extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render(),this.shadowRoot.querySelector("form").addEventListener("submit",(async t=>{t.preventDefault();const e=this.shadowRoot.querySelector("#title").value.trim(),n=this.shadowRoot.querySelector("#body").value.trim();if(!e||!n)return alert("Judul dan isi catatan tidak boleh kosong!");try{await y(e,n),document.dispatchEvent(new CustomEvent("note-updated")),this.shadowRoot.querySelector("form").reset()}catch{alert("Gagal menambahkan catatan.")}}))}render(){this.shadowRoot.innerHTML='\n      <style>\n        form { display: flex; flex-direction: column; gap: 10px; }\n        input, textarea { padding: 10px; border: 1px solid #ddd; border-radius: 4px; }\n        button { background: #4CAF50; color: white; border: none; padding: 10px; border-radius: 4px; cursor: pointer; }\n      </style>\n      <form>\n        <input id="title" type="text" placeholder="Judul catatan" required />\n        <textarea id="body" placeholder="Isi catatan" rows="4" required></textarea>\n        <button type="submit">Tambah Catatan</button>\n      </form>\n    '}}customElements.define("notes-form",w);class E extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.notes=[]}connectedCallback(){this.loadNotes(),document.addEventListener("note-updated",(()=>this.loadNotes()))}async loadNotes(){this.shadowRoot.innerHTML="<loading-indicator></loading-indicator>";try{const t=await v();this.notes=t.data,this.render()}catch{alert("Gagal memuat catatan!")}}render(){this.shadowRoot.innerHTML=`\n      <style>\n        .grid { display: grid; gap: 15px; grid-template-columns: repeat(auto-fill, minmax(250px,1fr)); }\n        .note { background: white; border-radius: 8px; padding: 15px; box-shadow: 0 2px 6px rgba(0,0,0,0.1); transition: transform 0.2s ease; }\n        .note:hover { transform: scale(1.02); }\n        .note button { margin-top: 10px; margin-right: 5px; }\n      </style>\n      <div class="grid">\n        ${this.notes.map((t=>`\n          <div class="note">\n            <h3>${t.title}</h3>\n            <p>${t.body}</p>\n            <button onclick="dispatchEvent(new CustomEvent('note-archive',{detail:'${t.id}'}))">\n              ${t.archived?"Unarchive":"Archive"}\n            </button>\n            <button onclick="dispatchEvent(new CustomEvent('note-delete',{detail:'${t.id}'}))">Delete</button>\n          </div>\n        `)).join("")}\n      </div>\n    `}}customElements.define("notes-list",E),document.addEventListener("note-delete",(async t=>{confirm("Yakin ingin menghapus catatan ini?")&&(await g(t.detail),document.dispatchEvent(new CustomEvent("note-updated")))})),document.addEventListener("note-archive",(async t=>{const e=t.detail,n=(await v()).data.find((t=>t.id===e));n&&(n.archived?await x(e):await b(e),document.dispatchEvent(new CustomEvent("note-updated")))})),n(561)})()})();